{"version":3,"sources":["Main/Main.js","Nav/Nav.js","PdfComponent/PdfComponent.js","GetData/GetData.js","App.js","reportWebVitals.js","index.js"],"names":["Main","className","type","to","Nav","aria-current","Font","register","family","src","styles","StyleSheet","create","page","width","backgroundColor","fontFamily","title","margin","marginBottom","textAlign","padding","subTitle","fontSize","content","footer","PdfComponent","name","text","data","surname","size","style","GetData","useState","state","setState","update","e","item","target","value","nameItem","myPdf","split","reverse","join","onChange","id","aria-label","htmlFor","onClick","document","fileName","blob","url","loading","error","withRouter","path","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3527561e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Main() {\n  return (\n    <div className='text-center'>\n      <div className='m-5'>\n        <h2>React Pdf App</h2>\n        <span>Приветствую Вас, наше приложение поможет создать заявление в формате'PDF'</span><br />\n        <span>Чтобы приступить нажмите на кнопку ниже</span>\n      </div>\n      <div className='p-3'>\n        <button type=\"button\" className=\"btn btn-primary\">\n          <Link className=\"text-white text-decoration-none\" to=\"/create-pdf\">Создать PDF</Link>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className=\"nav bg-light justify-content-center\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/home\">Главная</Link>\r\n            <Link className=\"nav-link\" to=\"/create-pdf\">Создать PDF файл</Link>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Page, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\n\n\nFont.register({\n  family: 'Roboto',\n  src: 'https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-light-webfont.ttf',\n});\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    width: '95%',\n    backgroundColor: '#d5e2f5',\n    fontFamily: 'Roboto'\n  },\n  title: {\n    margin: 10,\n    marginBottom: 50,\n    textAlign: 'right',\n    padding: 10,\n  },\n  subTitle: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  content: {\n    margin: 10,\n    padding: 10,\n    marginBottom: 50,\n  },\n  footer: {\n    textAlign: 'right',\n    margin: 10,\n    padding: 10,\n  }\n});\n\n// Create Document Component\nexport const PdfComponent = ({ name, text, data, surname }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      <View style={styles.title}>\n\n        <Text>Генеральному директору</Text>\n        <Text>ООО \"Рога и Копыта\"</Text>\n        <Text>Иванову И.И</Text>\n        <Text>от {name}</Text>\n\n      </View>\n\n      <View style={styles.subTitle}>\n        <Text>Заявление</Text>\n      </View>\n\n      <View style={styles.content}>\n        <Text>{text}</Text>\n      </View>\n\n      <View style={styles.footer}>\n        <Text>{data}</Text>\n        <Text>{surname}</Text>\n      </View>\n\n    </Page>\n  </Document>\n)","import React from 'react'\nimport { useState } from 'react'\nimport { PdfComponent } from '../PdfComponent/PdfComponent';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\n\nexport default function GetData() {\n\n    const [state, setState] = useState({ name: '', text: '', data: '' })\n\n    const update = (e) => {\n        let item = e.target.value\n        let nameItem = e.target.name\n        setState({\n            ...state,\n            [nameItem]: item\n        });\n\n    }\n\n\n    let myPdf = <PdfComponent\n        name={state.name}\n        text={state.text}\n        data={state.data.split('-').reverse().join('-')}\n        surname={state.name.split(' ')[0]} />\n  \n\n    return (\n        <form className=\"m-auto w-50 mt-5\">\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Ф.И.О.</label>\n                <input type=\"text\" value={state.name} onChange={(e) => update(e)} className=\"form-control\" name=\"name\" />\n                <div id=\"familyHelp\" className=\"form-text\">Введите ФИО через пробел (Иванов Иван Иванович)</div>\n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Текст заявления</label>\n                <textarea value={state.text} onChange={(e) => update(e)} className=\"form-control\" name=\"text\" aria-label=\"With textarea\"></textarea>\n                <div id=\"familyHelp\" className=\"form-text\">Введите текст заявления в свободной форме</div>\n            </div>\n            <div className=\"d-flex justify-content-between w-100 align-items-center\">\n                <div className=\"form-check p-0 w-50\">\n                        <label className=\"form-label\" htmlFor=\"exampleCheck1\">Выберите дату</label>\n                        <input value={state.data} onChange={(e) => update(e)} className=\"form-control py-2 border-right-0 border\" name=\"data\" type=\"date\" />\n                </div>\n                <div onClick={() => setState({ name: '', text: '', data: '' })} className=\"mt-4\" >\n                    <PDFDownloadLink className=\"btn btn-primary\"\n                        document={myPdf}\n                        fileName=\"somename.pdf\">\n                        {({ blob, url, loading, error }) =>\n                            loading ? 'Loading document...' : 'Скачать заявление!'\n                        }\n                    </PDFDownloadLink>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n","import React from 'react'\nimport Main from './Main/Main';\nimport { Route, Redirect, HashRouter, withRouter } from \"react-router-dom\"\nimport Nav from './Nav/Nav';\nimport GetData from './GetData/GetData';\n\nfunction App() {\n  return (\n    <div className='container'>\n     <Nav />\n      <HashRouter>\n        <Route path='/home' component={Main} />\n        <Route path='/create-pdf' component={GetData} />\n        <Redirect from='/' to='/home' />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}